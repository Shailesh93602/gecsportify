<!DOCTYPE html>
<html lang="en">
<%- include('./partials/head.ejs') %>

    <body>
        <div class="container">
            <%- include('./partials/sidebar.ejs') %>
                <div class="form-container form-short">
                    <h1 class="form-header">Player Team Registration</h1>
                    <form action="/aplayers" method="post" clas="inputcontainer">
                        <input class="form-input" type="text" id="username" name="username"
                            placeholder="username"><br><br>
                        <input class="form-input" type="password" id="password" name="password"
                            placeholder="password"><br><br>
                        <input type="submit" class="form-submit">
                    </form>
                </div>
        </div>
        <%- include('./partials/footer.ejs') %>
    </body>
    <html>

    <head>
        <meta charset="utf-8" content="">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="description" content="">
        <meta name="author" content="Dashboard">
        <meta name="keyword" content="Dashboard, Bootstrap, Admin, Template, Theme, Responsive, Fluid, Retina">

        <title>Gujarat Technological University</title>


        <!-- Bootstrap core CSS -->
        <link href="assets/css/bootstrap.css" rel="stylesheet">
        <!--external css-->
        <link href="assets/font-awesome/css/font-awesome.css" rel="stylesheet">

        <!-- Custom styles for this template -->
        <link href="assets/css/style.css" rel="stylesheet">
        <link href="assets/css/style-responsive.css" rel="stylesheet">
        <!-- Captcha Code Script-->
        <script type="text/javascript">
            function RefreshCaptcha() {
                var img = document.getElementById("imgCaptcha");
                img.src = "Handler.ashx?query=" + Math.random();
                document.getElementById("txt_Captha").value = "";
            }

        </script>
        <script src="assets/js/jquery-1.8.3.min.js">
        </script>
        <script type="text/javascript">
            function preventBack() { window.history.forward(); }
            setTimeout("preventBack()", 0);
            window.onunload = function () { null };
        </script>
        <script type="text/javascript">
            window.oncontextmenu = function () {
                return false;
            }
            $(document).keydown(function (event) {
                if (event.keyCode == 123) {
                    return false;

                }

                else if ((event.ctrlKey && event.shiftKey && event.keyCode == 73) || (event.ctrlKey && event.shiftKey && event.keyCode == 74) || (event.ctrlKey && event.keyCode == 85)) {

                    return false;

                }


            });
        </script>
        <script type="text/javascript">
            function button_click(objTextBox, objBtnID) {
                if (window.event.keyCode == 13) {
                    document.getElementById(objBtnID).focus();
                    document.getElementById(objBtnID).click();
                }
            }
        </script>

        <style type="text/css">
            @font-face {
                font-family: Roboto;
                src: url("chrome-extension://mcgbeeipkmelnpldkobichboakdfaeon/css/Roboto-Regular.ttf");
            }
        </style>
        <style type="text/css">
            @font-face {
                font-weight: 400;
                font-style: normal;
                font-family: circular;

                src: url('chrome-extension://liecbddmkiiihnedobmlmillhodjkdmb/fonts/CircularXXWeb-Book.woff2') format('woff2');
            }

            @font-face {
                font-weight: 700;
                font-style: normal;
                font-family: circular;

                src: url('chrome-extension://liecbddmkiiihnedobmlmillhodjkdmb/fonts/CircularXXWeb-Bold.woff2') format('woff2');
            }
        </style>
    </head>

    <body style="" data-new-gr-c-s-check-loaded="14.1112.0" data-gr-ext-installed="">
        <!-- **********************************************************************************************************************************************************
      MAIN CONTENT
      *********************************************************************************************************************************************************** -->

        <div id="login-page">
            <div class="container" align="center">
                <br>
                &nbsp;&nbsp;

                <blink>


                </blink>
                <form name="Form1" method="post" action="./login.aspx" id="Form1" class="form-login">
                    <div>
                        <input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="">
                        <input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="">
                        <input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE"
                            value="/wEPDwUKLTcxMTQ3OTg0MQ9kFgJmD2QWAgIBD2QWAgIPDw8WAh4EVGV4dAULMTQgSnVuIDIwMjNkZGSwsm+ABlzAtZNFs1NYj0FHpbWdE8EeLFZ391j9D2n6cw==">
                    </div>

                    <script type="text/javascript">
                        //<![CDATA[
                        var theForm = document.forms['Form1'];
                        if (!theForm) {
                            theForm = document.Form1;
                        }
                        function __doPostBack(eventTarget, eventArgument) {
                            if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
                                theForm.__EVENTTARGET.value = eventTarget;
                                theForm.__EVENTARGUMENT.value = eventArgument;
                                theForm.submit();
                            }
                        }
//]]>
                    </script>


                    <div>

                        <input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="C2EE9ABB">
                        <input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION"
                            value="/wEdAAp8CYiXsGuAY+6ia9BA3eP4A1Kxk0pqJYzTi7+gjDzPWbI8ktEX4hs5AYxAuXaXyt2NZhE2ITw7ixMjSGO5f0lJ8U64O7P3hu9FCADqHdzsanDVWoSEvRCzmIlX0qynpXqGH6ganBfR5oLZgY+M+uKokyDzwhQ9SWHjHx3LC26Voxoo8ctp03FWEtB0pRdSOQP2RZnX8FDyApRvE1NN8Vid3BNJhgQi5Y8dZcnU3dzlh/lP3QMA2Qd4XE4WCvknuaw=">
                    </div>

                    <h2 class="form-login-heading">

                        <img src="assets/img/fnewgtulogo.png" width="70" height="80" alt="Logo" align="bottom">


                        <br>
                        Gujarat Technological University.
                    </h2>

                    <div class="login-wrap">
                        <span id="lblMessage" style="color:Red;"></span>
                        <input name="txt_Enroll" type="text" id="txt_Enroll"
                            title="Students enter Enrollment No. &amp; Department enter Usernames" class="form-control"
                            placeholder="Enrollment No/Username">
                        <br>

                        <input name="txt_APwd" id="txt_APwd" class="form-control" placeholder="Password"
                            type="password">
                        <br>
                        <div class="form-group">

                            <input name="txt_Captha" type="text" id="txt_Captha" placeholder="Captcha Code"
                                onkeypress="txt_captcha_keypress" style="height:30px;width:150px;">
                            &nbsp;&nbsp;&nbsp;
                            <img src="Handler.ashx" id="imgCaptcha" alt="CaptchaCode" height="35px">
                            <a href="#" onclick="javascript:RefreshCaptcha();" class="fa fa-refresh "></a>
                        </div>

                        <label class="checkbox">
                            <span class="pull-right">

                                <a href="javascript:__doPostBack('ctl01','')">Forgot Password?</a>

                            </span>
                        </label>
                        <input type="submit" name="btn_Login" value="SIGN IN" id="btn_Login"
                            class="btn btn-theme btn-block">
                        <br>
                        <div class="registration">

                            <a data-toggle="modal" href="login.html#NewReg">Create an account
                            </a>
                        </div>
                        <b>Note : Students who have already registerd themselves for recheck/reassment can use the same
                            username and password to login to this portal.</b>


                        <br>


                        <a data-toggle="modal" href="assets/StudentProfileGuideGTU.pdf" align="Center" target="_blank">
                            <p style="text-align: center; color: #800000; font-size: large;">FAQs</p>
                        </a>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>Last Updated on-</span>
                        <span id="lbl_update">14 Jun 2023</span>
                        - S01
                        <!-- Modal -->




                        <div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1"
                            id="ForgetPass" class="modal fade">
                            <div class="modal-dialog">
                                <div class="form-login">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal"
                                            aria-hidden="true">×</button>
                                        <h4 class="modal-title">Forgot Password ?</h4>
                                    </div>
                                    <div class="modal-body">
                                        <span id="lblFPMesage" style="color:Red;"></span><br>
                                        <p>Enter your GTU Enrollment No.</p>

                                        <input name="txt_FPEnrol" type="text" id="txt_FPEnrol"
                                            placeholder="Enrollment No" autocomplete="off"
                                            class="form-control placeholder-no-fix">

                                    </div>
                                    <div class="modal-footer">
                                        <button data-dismiss="modal" class="btn btn-default"
                                            type="button">Cancel</button>

                                        <input type="submit" name="btn_fogetpass" value="Submit" id="btn_fogetpass"
                                            class="btn btn-theme">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="NewReg"
                            class="modal fade">
                            <div class="modal-dialog">
                                <div class="form-login">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal"
                                            aria-hidden="true">×</button>
                                        <h4 class="modal-title">Student Profile Registration.</h4>
                                    </div>
                                    <div class="modal-body">
                                        <span id="lblRegMessage" style="color:Red;"></span><br>
                                        <p>Enter your GTU Enrollment No.</p>

                                        <input name="txt_RegEnrol" type="text" id="txt_RegEnrol"
                                            placeholder="Enrollment No" autocomplete="off"
                                            class="form-control placeholder-no-fix">
                                    </div>
                                    <div class="modal-footer">
                                        <button data-dismiss="modal" class="btn btn-default"
                                            type="button">Cancel</button>

                                        <input type="submit" name="btn_reg" value="Submit" id="btn_reg"
                                            class="btn btn-theme">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- modal -->


                    </div>
                </form>
            </div>


            <script type="text/javascript" src="assets/js/jquery.js"></script>
            <script type="text/javascript" src="assets/js/bootstrap.min.js"></script>

            <!--BACKSTRETCH-->
            <!-- You can use an image of whatever size. This script will stretch to fit in any screen size.-->
            <script type="text/javascript" src="assets/js/jquery.backstretch.min.js"></script>



        </div>
        <div id="loom-companion-mv3" ext-id="liecbddmkiiihnedobmlmillhodjkdmb">
            <section id="shadow-host-companion"></section>
        </div>
        <script>
            function returnCommentSymbol(language = "javascript") {
                const languageObject = {
                    bat: "@REM",
                    c: "//",
                    csharp: "//",
                    cpp: "//",
                    closure: ";;",
                    coffeescript: "#",
                    dockercompose: "#",
                    css: "/*DELIMITER*/",
                    "cuda-cpp": "//",
                    dart: "//",
                    diff: "#",
                    dockerfile: "#",
                    fsharp: "//",
                    "git-commit": "//",
                    "git-rebase": "#",
                    go: "//",
                    groovy: "//",
                    handlebars: "{{!--DELIMITER--}}",
                    hlsl: "//",
                    html: "<!--DELIMITER-->",
                    ignore: "#",
                    ini: ";",
                    java: "//",
                    javascript: "//",
                    javascriptreact: "//",
                    json: "//",
                    jsonc: "//",
                    julia: "#",
                    latex: "%",
                    less: "//",
                    lua: "--",
                    makefile: "#",
                    markdown: "<!--DELIMITER-->",
                    "objective-c": "//",
                    "objective-cpp": "//",
                    perl: "#",
                    perl6: "#",
                    php: "<!--DELIMITER-->",
                    powershell: "#",
                    properties: ";",
                    jade: "//-",
                    python: "#",
                    r: "#",
                    razor: "<!--DELIMITER-->",
                    restructuredtext: "..",
                    ruby: "#",
                    rust: "//",
                    scss: "//",
                    shaderlab: "//",
                    shellscript: "#",
                    sql: "--",
                    svg: "<!--DELIMITER-->",
                    swift: "//",
                    tex: "%",
                    typescript: "//",
                    typescriptreact: "//",
                    vb: "'",
                    xml: "<!--DELIMITER-->",
                    xsl: "<!--DELIMITER-->",
                    yaml: "#"
                }
                if (!languageObject[language]) {
                    return languageObject["python"].split("DELIMITER")
                }
                return languageObject[language].split("DELIMITER")
            }
            var savedChPos = 0
            var returnedSuggestion = ''
            let editor, doc, cursor, line, pos
            pos = { line: 0, ch: 0 }
            var suggestionsStatus = false
            var docLang = "python"
            var suggestionDisplayed = false
            var isReturningSuggestion = false
            document.addEventListener("keydown", (event) => {
                setTimeout(() => {
                    editor = event.target.closest('.CodeMirror');
                    if (editor) {
                        const codeEditor = editor.CodeMirror
                        if (!editor.classList.contains("added-tab-function")) {
                            editor.classList.add("added-tab-function")
                            codeEditor.removeKeyMap("Tab")
                            codeEditor.setOption("extraKeys", {
                                Tab: (cm) => {

                                    if (returnedSuggestion) {
                                        acceptTab(returnedSuggestion)
                                    }
                                    else {
                                        cm.execCommand("defaultTab")
                                    }
                                }
                            })
                        }
                        doc = editor.CodeMirror.getDoc()
                        cursor = doc.getCursor()
                        line = doc.getLine(cursor.line)
                        pos = { line: cursor.line, ch: line.length }

                        if (cursor.ch > 0) {
                            savedChPos = cursor.ch
                        }

                        const fileLang = doc.getMode().name
                        docLang = fileLang
                        const commentSymbol = returnCommentSymbol(fileLang)
                        if (event.key == "?") {
                            var lastLine = line
                            lastLine = lastLine.slice(0, savedChPos - 1)

                            if (lastLine.trim().startsWith(commentSymbol[0])) {
                                if (fileLang !== "null") {
                                    lastLine += " " + fileLang
                                }

                                lastLine = lastLine.split(commentSymbol[0])[1]
                                window.postMessage({ source: 'getQuery', payload: { data: lastLine } })
                                isReturningSuggestion = true
                                displayGrey("\nBlackbox loading...")
                            }
                        } else if (event.key === "Enter" && suggestionsStatus && !isReturningSuggestion) {
                            var query = doc.getRange({ line: Math.max(0, cursor.line - 50), ch: 0 }, { line: cursor.line, ch: line.length })
                            window.postMessage({ source: 'getSuggestion', payload: { data: query, language: docLang, cursorPos: pos } })
                            displayGrey("Blackbox loading...")
                        } else if (event.key === "ArrowRight" && returnedSuggestion) {
                            acceptTab(returnedSuggestion)
                        } else if (event.key === "Enter" && isReturningSuggestion) {
                            displayGrey("\nBlackbox loading...")
                        } else if (event.key === "Escape") {
                            displayGrey("")
                        }
                    }
                }, 0)
            })

            function acceptTab(text) {
                if (suggestionDisplayed) {
                    displayGrey("")
                    doc.replaceRange(text, pos)
                    returnedSuggestion = ""
                    updateSuggestionStatus(false)
                }
            }
            function acceptSuggestion(text) {
                displayGrey("")
                doc.replaceRange(text, pos)
                returnedSuggestion = ""
                updateSuggestionStatus(false)
            }
            function displayGrey(text) {
                if (!text) {
                    document.querySelector(".blackbox-suggestion").remove()
                    return
                }
                var el = document.querySelector(".blackbox-suggestion")
                if (!el) {
                    el = document.createElement('span')
                    el.classList.add("blackbox-suggestion")
                    el.style = 'color:grey'
                    el.innerText = text
                }
                else {
                    el.innerText = text
                }

                var lineIndex = pos.line;
                editor.getElementsByClassName('CodeMirror-line')[lineIndex].appendChild(el)
            }
            function updateSuggestionStatus(s) {
                suggestionDisplayed = s
                window.postMessage({ source: 'updateSuggestionStatus', status: suggestionDisplayed, suggestion: returnedSuggestion })
            }
            window.addEventListener('message', (event) => {
                if (event.source !== window) return
                if (event.data.source == 'return') {
                    isReturningSuggestion = false
                    const formattedCode = formatCode(event.data.payload.data)
                    returnedSuggestion = formattedCode
                    displayGrey(formattedCode)
                    updateSuggestionStatus(true)
                }
                if (event.data.source == 'suggestReturn') {
                    const prePos = event.data.payload.cursorPos
                    if (pos.line == prePos.line && pos.ch == prePos.ch) {
                        returnedSuggestion = event.data.payload.data
                        displayGrey(event.data.payload.data)
                        updateSuggestionStatus(true)
                    }
                    else {
                        displayGrey()
                    }
                }
                if (event.data.source == 'codeSearchReturn') {
                    isReturningSuggestion = false
                    displayGrey()
                }
                if (event.data.source == 'suggestionsStatus') {
                    suggestionsStatus = event.data.payload.enabled
                }
                if (event.data.source == 'acceptSuggestion') {

                    acceptSuggestion(event.data.suggestion)
                }
            })
            document.addEventListener("keyup", function () {
                returnedSuggestion = ""
                updateSuggestionStatus(false)
            })
            function formatCode(data) {
                if (Array.isArray(data)) {
                    var finalCode = ""
                    var pairs = []

                    const commentSymbol = returnCommentSymbol(docLang)
                    data.forEach((codeArr, idx) => {
                        const code = codeArr[0]
                        var desc = codeArr[1]
                        const descArr = desc.split("\n")
                        var finalDesc = ""
                        descArr.forEach((descLine, idx) => {
                            const whiteSpace = descLine.search(/\S/)
                            if (commentSymbol.length < 2 || idx === 0) {
                                finalDesc += insert(descLine, whiteSpace, commentSymbol[0])
                            }
                            if (commentSymbol.length > 1 && idx === descArr.length - 1) {
                                finalDesc = finalDesc + commentSymbol[1] + "\n"
                            }
                        })

                        finalCode += finalDesc + "\n\n" + code
                        pairs.push(finalCode)
                    })
                    return "\n" + pairs.join("\n")
                }

                return "\n" + data
            }

            function insert(str, index, value) {
                return str.substr(0, index) + value + str.substr(index)
            }
        </script>
        <iframe id="nr-ext-rsicon"
            style="position: absolute; display: none; width: 50px; height: 50px; z-index: 2147483647; border-style: none; background: transparent;"></iframe>
    </body><!-- js placed at the end of the document so the pages load faster --><grammarly-desktop-integration
        data-grammarly-shadow-root="true"></grammarly-desktop-integration>

    </html>

</html>